name: Generate GitHub Metrics

on:
  schedule:
    - cron: "0 0 * * *"  # Executa diariamente
  workflow_dispatch:
  push:
    branches: ["master", "main"]

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get GitHub User Data
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/users/${{ github.repository_owner }} > stats.json

      - name: Get GitHub Pull Requests
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/search/issues?q=author:${{ github.repository_owner }}+type:pr" > pull_requests.json

      - name: Get GitHub Commits (Last Year)
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/search/commits?q=author:${{ github.repository_owner }}+committer-date:>$(date -d '1 year ago' --utc +%Y-%m-%d)&per_page=100" > commits.json

      - name: Get GitHub Merges (Pull Requests Closed)
        run: |
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/search/issues?q=author:${{ github.repository_owner }}+type:pr+is:merged" > merges.json

      - name: Generate SVG with Extended Metrics
        run: |
          node -e "
          const fs = require('fs');

          const safeParse = (file) => {
            try {
              return JSON.parse(fs.readFileSync(file));
            } catch {
              return {};
            }
          };

          const userData = safeParse('stats.json');
          const prData = safeParse('pull_requests.json');
          const commitData = Array.isArray(safeParse('commits.json')) ? safeParse('commits.json') : [];
          const mergeData = safeParse('merges.json');

          const stars = userData.public_repos || '0';
          const forks = userData.followers || '0';
          const totalPRs = prData.total_count || '0';
          const totalCommits = commitData.total_count || '0';
          const totalMerges = mergeData.total_count || '0';

          const svgContent = \`
          <svg width='600' height='350' xmlns='http://www.w3.org/2000/svg'>
            <style>
              .title { fill: #ffffff; font-size: 24px; font-family: Arial, sans-serif; font-weight: bold; }
              .stat { fill: #ffffff; font-size: 18px; font-family: Arial, sans-serif; }
              .background { fill: #141321; }
            </style>
            <rect width='100%' height='100%' class='background'/>
            <text x='20' y='40' class='title'>ðŸ“Š GitHub Statistics</text>
            <text x='20' y='80' class='stat'>â˜… Stars: \${stars}</text>
            <text x='20' y='110' class='stat'>â‘‚ Forks: \${forks}</text>
            <text x='20' y='140' class='stat'>ðŸ”€ Pull Requests: \${totalPRs}</text>
            <text x='20' y='170' class='stat'>âœ… Merges (PRs fechados): \${totalMerges}</text>
            <text x='20' y='200' class='stat'>ðŸ“Œ Commits (Ãºltimo ano): \${totalCommits}</text>
          </svg>\`;
          fs.writeFileSync('github-metrics.svg', svgContent);
          "

      - name: Commit and Push
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git pull --rebase  # Atualiza a branch local antes de enviar
          git add github-metrics.svg
          git commit -m "Update GitHub metrics" || echo "Nothing to commit"
          git push
